name: Install PowerShell
description: Install a specific version of PowerShell Core on any GitHub runner (Linux, macOS, Windows). Installs only when the requested version is not already present.
author: PSModule
branding:
  icon: terminal
  color: purple

inputs:
  Version:
    description: Exact PowerShell version to install (e.g. 7.4.1)
    required: true

runs:
  using: composite
  steps:
    - name: Install PowerShell (Linux)
      if: runner.os == 'Linux'
      env:
        REQUESTED_VERSION: ${{ inputs.Version }}
      shell: bash
      run: |
        set -e
        DETECTED_VERSION=$(pwsh -NoLogo -NoProfile -Command '$PSVersionTable.PSVersion.ToString()' 2>/dev/null || true)
        if [[ "$DETECTED_VERSION" == "$REQUESTED_VERSION" ]]; then
          echo "PowerShell $DETECTED_VERSION already installed. Skipping."
          exit 0
        fi

        if command -v apt-get >/dev/null; then
          echo "Using APT package manager (Debian/Ubuntu)..."

          if ! grep -q "packages.microsoft.com" /etc/apt/sources.list /etc/apt/sources.list.d/* 2>/dev/null; then
            wget -qO- https://packages.microsoft.com/keys/microsoft.asc | sudo tee /etc/apt/trusted.gpg.d/microsoft.asc > /dev/null
            DIST_CODENAME=$(lsb_release -cs)
            sudo add-apt-repository "deb [arch=$(dpkg --print-architecture)] https://packages.microsoft.com/ubuntu/$DIST_CODENAME/prod $DIST_CODENAME main"
          fi

          sudo apt-get update -y
          EXACT_PKG=$(apt-cache madison powershell | awk '{print $3}' | grep -E "^${REQUESTED_VERSION}(-|$)" | head -n1 || true)
          if [[ -n "$EXACT_PKG" ]]; then
            sudo apt-get install -y powershell=$EXACT_PKG
          else
            ARCH=$(dpkg --print-architecture)
            DEB_NAME="powershell_${REQUESTED_VERSION}-1.deb_${ARCH}.deb"
            URL="https://github.com/PowerShell/PowerShell/releases/download/v${REQUESTED_VERSION}/${DEB_NAME}"
            wget -q "$URL" -O "$DEB_NAME"
            sudo dpkg -i "$DEB_NAME" || sudo apt-get -f install -y
          fi
        else
          echo "Unsupported Linux distribution (no apt-get)."
          exit 1
        fi

    - name: Install PowerShell (macOS)
      if: runner.os == 'macOS'
      env:
        REQUESTED_VERSION: ${{ inputs.Version }}
      shell: bash
      run: |
        set -e
        DETECTED_VERSION=$(pwsh -NoLogo -NoProfile -Command '$PSVersionTable.PSVersion.ToString()' 2>/dev/null || true)
        if [[ "$DETECTED_VERSION" == "$REQUESTED_VERSION" ]]; then
          echo "PowerShell $DETECTED_VERSION already installed. Skipping."
          exit 0
        fi

        if brew info --cask powershell@$REQUESTED_VERSION >/dev/null 2>&1; then
          brew install --cask powershell@$REQUESTED_VERSION
        else
          ARCH=$(uname -m)
          if [[ "$ARCH" == "arm64" ]]; then PKG_NAME="powershell-${REQUESTED_VERSION}-osx-arm64.pkg"; else PKG_NAME="powershell-${REQUESTED_VERSION}-osx-x64.pkg"; fi
          URL="https://github.com/PowerShell/PowerShell/releases/download/v${REQUESTED_VERSION}/${PKG_NAME}"
          curl -sSL "$URL" -o "$PKG_NAME"
          sudo installer -pkg "$PKG_NAME" -target /
        fi

    - name: Install PowerShell (Windows)
      if: runner.os == 'Windows'
      env:
        REQUESTED_VERSION: ${{ inputs.Version }}
      shell: powershell
      run: |
        try {
          $detected = (& pwsh -NoLogo -NoProfile -Command '$PSVersionTable.PSVersion.ToString()')
        } catch {
          $detected = $null
        }

        if ($detected -eq $env:REQUESTED_VERSION) {
          Write-Host "PowerShell $detected already installed. Skipping."
          exit 0
        }

        $msi = "PowerShell-$($env:REQUESTED_VERSION)-win-x64.msi"
        $url = "https://github.com/PowerShell/PowerShell/releases/download/v$($env:REQUESTED_VERSION)/$msi"
        Invoke-WebRequest -Uri $url -OutFile $msi -UseBasicParsing
        Start-Process msiexec.exe -ArgumentList '/i', $msi, '/quiet', '/norestart' -Wait
