name: Install PowerShell
description: Install a specific version of PowerShell Core on any GitHub runner (Linux, macOS, Windows). Handles install, downgrade, or forced reinstall.
author: PSModule
branding:
  icon: terminal
  color: purple

inputs:
  Version:
    description: Exact PowerShell version to install (e.g. 7.4.1)
    required: true
  Reinstall:
    description: Set to 'true' to uninstall & reinstall even when the exact version is already present.
    default: 'false'

runs:
  using: composite
  steps:
    - name: Install PowerShell (Linux)
      if: runner.os == 'Linux'
      env:
        REQUESTED_VERSION: ${{ inputs.Version }}
        REINSTALL: ${{ inputs.Reinstall }}
      shell: bash
      run: |
        set -e

        echo "Detecting existing PowerShell on Linux…"
        DETECTED_VERSION=$(pwsh -NoLogo -NoProfile -Command '$PSVersionTable.PSVersion.ToString()' 2>/dev/null || true)
        echo "Detected version: ${DETECTED_VERSION:-<none>}"
        echo "Requested version: $REQUESTED_VERSION"
        echo "Reinstall flag: $REINSTALL"

        if [[ -z "$DETECTED_VERSION" ]]; then
          DECISION="install"
        elif [[ "$DETECTED_VERSION" == "$REQUESTED_VERSION" ]]; then
          if [[ "$REINSTALL" == "true" ]]; then DECISION="reinstall"; else DECISION="skip"; fi
        else
          DECISION="uninstall-install"  # covers downgrade or upgrade
        fi
        echo "Decision: $DECISION"

        if [[ "$DECISION" == "skip" ]]; then
          echo "Skipping installation on Linux (exact version present)."
        else
          echo "Uninstalling any existing PowerShell…"
          sudo rm -rf /usr/local/microsoft/powershell || true
          sudo rm -f /usr/local/bin/pwsh || true
          echo "Installing PowerShell $REQUESTED_VERSION…"
          curl -sSL https://aka.ms/install-powershell.sh | sudo bash -s -- -Version "$REQUESTED_VERSION" -Destination /usr/local
        fi

        PWSH_PATH=$(command -v pwsh)
        echo "PWSH_PATH=$PWSH_PATH" >> $GITHUB_ENV
        echo "PWSH_VERSION=$REQUESTED_VERSION" >> $GITHUB_ENV
        echo "pwsh-path=$PWSH_PATH" >> $GITHUB_OUTPUT
        echo "pwsh-version=$REQUESTED_VERSION" >> $GITHUB_OUTPUT

    - name: Install PowerShell (macOS)
      if: runner.os == 'macOS'
      env:
        REQUESTED_VERSION: ${{ inputs.Version }}
        REINSTALL: ${{ inputs.Reinstall }}
      shell: bash
      run: |
        set -e

        echo "Detecting existing PowerShell on macOS…"
        DETECTED_VERSION=$(pwsh -NoLogo -NoProfile -Command '$PSVersionTable.PSVersion.ToString()' 2>/dev/null || true)
        echo "Detected version: ${DETECTED_VERSION:-<none>}"
        echo "Requested version: $REQUESTED_VERSION"
        echo "Reinstall flag: $REINSTALL"

        if [[ -z "$DETECTED_VERSION" ]]; then
          DECISION="install"
        elif [[ "$DETECTED_VERSION" == "$REQUESTED_VERSION" ]]; then
          if [[ "$REINSTALL" == "true" ]]; then DECISION="reinstall"; else DECISION="skip"; fi
        else
          DECISION="uninstall-install"
        fi
        echo "Decision: $DECISION"

        if [[ "$DECISION" == "skip" ]]; then
          echo "Skipping installation on macOS (exact version present)."
        else
          echo "Uninstalling any existing PowerShell…"
          sudo rm -rf /usr/local/microsoft/powershell || true
          sudo rm -f /usr/local/bin/pwsh || true
          echo "Installing PowerShell $REQUESTED_VERSION…"
          curl -sSL https://aka.ms/install-powershell.sh | sudo bash -s -- -Version "$REQUESTED_VERSION" -Destination /usr/local
        fi

        PWSH_PATH=$(command -v pwsh)
        echo "PWSH_PATH=$PWSH_PATH" >> $GITHUB_ENV
        echo "PWSH_VERSION=$REQUESTED_VERSION" >> $GITHUB_ENV
        echo "pwsh-path=$PWSH_PATH" >> $GITHUB_OUTPUT
        echo "pwsh-version=$REQUESTED_VERSION" >> $GITHUB_OUTPUT

    - name: Install PowerShell (Windows)
      if: runner.os == 'Windows'
      env:
        REQUESTED_VERSION: ${{ inputs.Version }}
        REINSTALL: ${{ inputs.Reinstall }}
      shell: powershell
      run: |
        Write-Host "Detecting existing PowerShell on Windows…"
        try {
          $detected = (pwsh -NoLogo -NoProfile -Command "$PSVersionTable.PSVersion.ToString()")
        } catch {
          $detected = $null
        }

        if ($null -eq $detected -or $detected -eq '') {
          $detectedDisplay = '<none>'
        } else {
          $detectedDisplay = $detected
        }
        Write-Host "Detected version: $detectedDisplay"
        Write-Host "Requested version: $env:REQUESTED_VERSION"
        Write-Host "Reinstall flag: $env:REINSTALL"

        if (-not $detected) {
          $decision = 'install'
        } elseif ($detected -eq $env:REQUESTED_VERSION) {
          if ($env:REINSTALL -eq 'true') {
            $decision = 'reinstall'
          } else {
            $decision = 'skip'
          }
        } else {
          $decision = 'uninstall-install'
        }
        Write-Host "Decision: $decision"

        if ($decision -eq 'skip') {
          Write-Host 'Skipping installation on Windows (exact version present).'
        } else {
          Write-Host 'Uninstalling any existing PowerShell…'
          winget uninstall --id Microsoft.PowerShell -e --silent | Out-Null
          Write-Host "Installing PowerShell $env:REQUESTED_VERSION…"
          $msi = "PowerShell-$($env:REQUESTED_VERSION)-win-x64.msi"
          $url = "https://github.com/PowerShell/PowerShell/releases/download/v$($env:REQUESTED_VERSION)/$msi"
          Invoke-WebRequest $url -OutFile $msi
          Start-Process msiexec.exe -ArgumentList '/i', $msi, '/quiet', '/norestart' -Wait
        }
